
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD AS AXE BBQ BUILD CHICKEN COMPARE DOT EQ FOX FR HATCH ID IFF IFT INT LBRACE LBRACK LPAREN NEWLINE PECK PICK PUSH RBRACE RBRACK ROOSTER RPAREN STR TOP WHILEF WHILET \texpressions : expressions NEWLINE expression\n                       | expression\n                       | NEWLINE\n        expression : AXE\n                      | CHICKEN\n                      | ADD\n                      | FOX\n                      | ROOSTER\n                      | COMPARE\n                      | PICK\n                      | PECK\n                      | FR\n                      | BBQ\n        expression : ID LBRACK INT RBRACK EQ val\n                      | ID EQ val\n        expression : ID LBRACK INT RBRACK\n                      | ID\n        expression : PUSH STR\n                      | PUSH INT\n        expression : HATCH functionexpression : ID AS IDexpression : BUILD ID LBRACEexpression : WHILET LBRACEexpression : WHILEF LBRACEexpression : IFT LBRACEexpression : IFF LBRACEexpression : RBRACEfunction : ID DOT function\n                    | ID\n        val : STR\n               | INT\n               | TOP\n        '
    
_lr_action_items = {'NEWLINE':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,27,28,29,30,32,33,34,35,36,38,39,40,41,42,44,45,46,48,],[2,23,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-17,-27,-18,-19,-20,-29,-23,-24,-25,-26,-1,-15,-30,-31,-32,-21,-22,-16,-28,-14,]),'AXE':([0,23,],[4,4,]),'CHICKEN':([0,23,],[5,5,]),'ADD':([0,23,],[6,6,]),'FOX':([0,23,],[7,7,]),'ROOSTER':([0,23,],[8,8,]),'COMPARE':([0,23,],[9,9,]),'PICK':([0,23,],[10,10,]),'PECK':([0,23,],[11,11,]),'FR':([0,23,],[12,12,]),'BBQ':([0,23,],[13,13,]),'ID':([0,16,17,23,26,43,],[14,30,31,14,42,30,]),'PUSH':([0,23,],[15,15,]),'HATCH':([0,23,],[16,16,]),'BUILD':([0,23,],[17,17,]),'WHILET':([0,23,],[18,18,]),'WHILEF':([0,23,],[19,19,]),'IFT':([0,23,],[20,20,]),'IFF':([0,23,],[21,21,]),'RBRACE':([0,23,],[22,22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,22,27,28,29,30,32,33,34,35,36,38,39,40,41,42,44,45,46,48,],[0,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-17,-27,-18,-19,-20,-29,-23,-24,-25,-26,-1,-15,-30,-31,-32,-21,-22,-16,-28,-14,]),'LBRACK':([14,],[24,]),'EQ':([14,45,],[25,47,]),'AS':([14,],[26,]),'STR':([15,25,47,],[27,39,39,]),'INT':([15,24,25,47,],[28,37,40,40,]),'LBRACE':([18,19,20,21,31,],[32,33,34,35,44,]),'TOP':([25,47,],[41,41,]),'DOT':([30,],[43,]),'RBRACK':([37,],[45,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expressions':([0,],[1,]),'expression':([0,23,],[3,36,]),'function':([16,43,],[29,46,]),'val':([25,47,],[38,48,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expressions","S'",1,None,None,None),
  ('expressions -> expressions NEWLINE expression','expressions',3,'p_expression_program','main.py',195),
  ('expressions -> expression','expressions',1,'p_expression_program','main.py',196),
  ('expressions -> NEWLINE','expressions',1,'p_expression_program','main.py',197),
  ('expression -> AXE','expression',1,'p_expression_keyword','main.py',205),
  ('expression -> CHICKEN','expression',1,'p_expression_keyword','main.py',206),
  ('expression -> ADD','expression',1,'p_expression_keyword','main.py',207),
  ('expression -> FOX','expression',1,'p_expression_keyword','main.py',208),
  ('expression -> ROOSTER','expression',1,'p_expression_keyword','main.py',209),
  ('expression -> COMPARE','expression',1,'p_expression_keyword','main.py',210),
  ('expression -> PICK','expression',1,'p_expression_keyword','main.py',211),
  ('expression -> PECK','expression',1,'p_expression_keyword','main.py',212),
  ('expression -> FR','expression',1,'p_expression_keyword','main.py',213),
  ('expression -> BBQ','expression',1,'p_expression_keyword','main.py',214),
  ('expression -> ID LBRACK INT RBRACK EQ val','expression',6,'p_expression_SETVAR','main.py',219),
  ('expression -> ID EQ val','expression',3,'p_expression_SETVAR','main.py',220),
  ('expression -> ID LBRACK INT RBRACK','expression',4,'p_expression_GETVAR','main.py',228),
  ('expression -> ID','expression',1,'p_expression_GETVAR','main.py',229),
  ('expression -> PUSH STR','expression',2,'p_expression_PUSH','main.py',237),
  ('expression -> PUSH INT','expression',2,'p_expression_PUSH','main.py',238),
  ('expression -> HATCH function','expression',2,'p_expression_HATCH','main.py',243),
  ('expression -> ID AS ID','expression',3,'p_expression_AS','main.py',247),
  ('expression -> BUILD ID LBRACE','expression',3,'p_expression_enter_block_build','main.py',251),
  ('expression -> WHILET LBRACE','expression',2,'p_expression_enter_block_whilet','main.py',255),
  ('expression -> WHILEF LBRACE','expression',2,'p_expression_enter_block_whilef','main.py',259),
  ('expression -> IFT LBRACE','expression',2,'p_expression_enter_block_ift','main.py',263),
  ('expression -> IFF LBRACE','expression',2,'p_expression_enter_block_iff','main.py',267),
  ('expression -> RBRACE','expression',1,'p_expression_exit_block','main.py',271),
  ('function -> ID DOT function','function',3,'p_FUNCTION','main.py',275),
  ('function -> ID','function',1,'p_FUNCTION','main.py',276),
  ('val -> STR','val',1,'p_VAL','main.py',281),
  ('val -> INT','val',1,'p_VAL','main.py',282),
  ('val -> TOP','val',1,'p_VAL','main.py',283),
]
